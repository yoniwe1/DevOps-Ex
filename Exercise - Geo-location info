Q: Write a bash script (e.g. my-script.sh) that given an ip address, prints geo-location details, as follows:

    The script first checks if jq cli is installed, if not, it prints a message to the user with a link to download the tool: https://stedolan.github.io/jq/download/
    The script checks that exactly one argument was sent to it, which representing the ip address to check. Otherwise, an informative message is being printed to stdout.
    The script checks that the given IP argument is not equal to '127.0.0.1'
    The script performs an HTTP GET request to http://ip-api.com/json/<ip> while <ip> is the IP argument. The results should be stored in a variable.
    Using jq tool and the variable containing the HTTP response, check that the request has been succeeded by checking that status key has a value of success. The command jq -r '.<key>' can extract a key from the json (e.g. echo $RESPONSE | jq -r '.status')
    If the request succeed, print the following information to the user:

    country
    city
    regionName
    
A: 

#!/bin/bash

#define variables
package_name="jq"

#check if package name jq exists
dpkg -l $package_name > /dev/null 2>&1

#if no refernce user to site and leave
if [ $? -ne 0 ]; then
  echo "Please download jq package on: https://stedolan.github.io/jq/download/"
  exit 1
fi

#check if exactly 1 argumet is sent to script
if [ $# -ne 1 ]; then
  echo "Please send exactly 1 argument to the script as the IP address"
  exit 1
fi

#if loopback fail
if [ $1 == "127.0.0.1" ]; then
  echo "no loopback available"
  exit 1
fi

response=$(curl -s http://ip-api.com/json/$1)

#if GET-HTTP request succedded print country, city and region name
if [[ $(echo $response | jq -r '.status') == "success" ]]; then
  echo $response | jq -r '.country'
  echo $response | jq -r '.city'
  echo $response | jq -r '.regionName'
else
  echo "no host response from $1"
  exit 1
fi


